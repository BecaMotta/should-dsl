Should DSL implemented in Python

This is an implementation with an alternative format for the "should" assertions.

The goal is to write a "should" DSL in Python to be as clear as possible.

It would be good to be as close as:

 SOME_VALUE should be equal to ANOTHER VALUE
 or
 SOME_EXCEPTION should be thrown by SOME_CALLABLE
 or
 SOME_VALUE should not be into SOME_CONTAINER
 

For using this DSL, you need to import all the module's namespace, as:
from should_dsl import *

For example:

1  <<should_be.equal_to>> 1, will be true
'should' <<should_have>> 'oul', will also be true

A nice example of exceptions would be:
def raise_zerodivisionerror():
    return 1/0
ZeroDivisionError <<should_be.thrown_by>> raise_zerodivisionerror
